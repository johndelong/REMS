<Window xmlns:classes="clr-namespace:REMS.classes"  x:Class="REMS.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ni="http://schemas.ni.com/controls/2009/xaml/presentation" 
        xmlns:p="clr-namespace:REMS.Properties"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        Title="Radiative Emissions Measuring System" Height="600" MinHeight="600" Width="800" MinWidth="800"
        Closing="onClosing" Name="REMSWindow">

    <Grid>
        <DockPanel >
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_New Scan" Name="btnNewScan" Click="click_newScan" />
                    <MenuItem Header="_Open" Name="btnOpen" Click="click_open"/>
                    <MenuItem Header="_Close" Name="btnClose" Click="btnClose_Click"/>
                    <MenuItem Header="_Save HeatMap" Name="btnSaveHeatMap" Click="click_saveHeatMapImage" />
                    <MenuItem Header="_Preferences" Name="btnPreferences" Click="click_preferences"/>
                    <MenuItem Header="_Exit" Name="btnExit" Click="btnExit_Click"/>
                </MenuItem>
                <MenuItem Header="_Commands" Name="menuCommands">
                    <MenuItem Header="_Change Probe" Name="btnChangeProbe" Click="click_changeProbe"/>
                    <MenuItem Header="_Get Base Line" Name="btnBaseLine" Click="btnBaseLine_Click" />
                    <MenuItem Header="_Home Motors" Name="btnHomeMotors" Click="btnHomeMotors_Click"/>
                    <MenuItem Header="_Move To..." Name="btnMoveTo" Click="click_MoveTo"/>
                </MenuItem>
                <MenuItem Header="_Tools" Name="menuTools">
                    <MenuItem Header="_Calibrate" Name="btnCalibrate" Click="click_calibrate"/>
                    <!--<MenuItem Header="_Debug Capture" Name="btnCamera" Click="click_capture_image"/>-->
                    <MenuItem Name="btnReconnect" Header="_Reconnect All" Click="click_reconnect"/>
                </MenuItem>
            </Menu>

            <StatusBar DockPanel.Dock="Bottom">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="80" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem>
                    <TextBlock Name="lblStatus" Text="Current instruction goes here" />
                </StatusBarItem>
                <Separator Grid.Column="1" Width="1" />
                <StatusBarItem Grid.Column="2">
                    <TextBlock Text="X:" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="3">
                    <TextBlock Name="lblXPosition" Text="0" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="4">
                    <TextBlock Text="Y:" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="5">
                    <TextBlock Name="lblYPosition" Text="0" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="6">
                    <TextBlock Text="Z:" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="7">
                    <TextBlock Name="lblZPosition" Text="0" />
                </StatusBarItem>
                <Separator Grid.Column="8" Width="1" />
                <StatusBarItem Grid.Column="9" HorizontalAlignment="Center" >
                    <TextBlock Name="lblCDTimer" Text="00:00:00.00" />
                </StatusBarItem>
            </StatusBar>
            <StackPanel></StackPanel>
        </DockPanel>

        <Grid Margin="0,25,0,25">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <!-- Arrange group boxes on left -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="5*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>

                <GroupBox Grid.Row="0" Grid.ColumnSpan="2" Header="Take Picture" Margin="3,0,3,0">
                    <Button Name="btnCaptureImage" Content="Preview" Width="80" Click="click_captureImage" Margin="0,3,0,3"/>
                </GroupBox>

                <GroupBox Grid.Row="1" Grid.Column="0" Header="Step Size (mm)" Margin="3,0,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Content="X/Y" Grid.Row="0" Grid.Column="0" />
                        <ni:NumericTextBoxInt32 Name="nsXYStepSize" Grid.Row="0" Grid.Column="1" Width="50" Margin="3" HorizontalAlignment="Right" Interval="1" ValueChanged="StepSizeValidator" />

                        <Label Content="Z" Grid.Row="1" Grid.Column="0"   />
                        <ni:NumericTextBoxInt32 Name="nsZStepSize" Grid.Row="1" Grid.Column="1" Width="50" Margin="3" HorizontalAlignment="Right" Interval="1" ValueChanged="StepSizeValidator" />
                    </Grid>
                </GroupBox>

                <GroupBox Grid.Row="1" Grid.Column="1" Header="Z Height (mm)" Margin="0,0,3,0" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Content="Min" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" />
                        <ni:NumericTextBoxInt32 Name="nsZMin" Grid.Row="0" Grid.Column="1" Width="50" Margin="3" HorizontalAlignment="Right" Interval="1" ValueChanged="ZLimitValidator" />

                        <Label Content="Max" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" />
                        <ni:NumericTextBoxInt32 Name="nsZMax" Grid.Row="1" Grid.Column="1" Width="50" Margin="3" HorizontalAlignment="Right" Interval="1" ValueChanged="ZLimitValidator" />
                    </Grid>
                </GroupBox>

                <GroupBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="3,0,3,0" Header="Heat Map Opacity" >
                    <DockPanel VerticalAlignment="Top" >
                        <TextBlock Text="%" DockPanel.Dock="Right" />
                        <TextBlock Text="{Binding ElementName=sHeatMapOpacity, Path=Value, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Right" TextAlignment="Right" Width="25" />

                        <Slider Name="sHeatMapOpacity" ValueChanged="heatMapOpacityChanged" Minimum="0" Maximum="100" IsSnapToTickEnabled="True" TickFrequency="5" TickPlacement="BottomRight"/>
                    </DockPanel>

                </GroupBox>

                <GroupBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="3,0,3,10" Header="Connection Status" >
                    <Grid Margin="3,0,3,0" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Motors:" Margin="0,3,0,3" />
                        <Label Grid.Row="0" Grid.Column="1" Name="lblMotorStatus" Content="Not Connected" HorizontalContentAlignment="Center" Background="Red" Margin="0,3,0,3" />
                        <Label Grid.Row="1" Grid.Column="0" Content="SA:" Margin="0,3,0,3" />
                        <Label Grid.Row="1" Grid.Column="1" Name="lblSAStatus" Content="Not Connected" HorizontalContentAlignment="Center" Background="Red" Margin="0,3,0,3" />
                    </Grid>
                </GroupBox>

                <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>
                    <Button Name="btnCancel" Grid.Column="0" Content="Cancel" Height="22" Width="80" Click="click_cancel" IsEnabled="False"  />
                    <Button Name="btnAccept" Grid.Column="1" Content="Accept" Height="22" Width="80" Click="click_accept" IsEnabled="False"  />
                </Grid>
                <!--<TextBox Name="debug_out" Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="262" Margin="10,9.6,0,0" Grid.Row="2" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="180"/>-->
            </Grid>

            <TabControl Name="Tabs" Grid.Row="0" Grid.Column="2" Grid.RowSpan="5" SelectionChanged="Tabs_SelectionChanged">
                <TabItem Header="Results" Name="ResultsTab">
                    <Grid x:Name="gridResultsTab" Background="AliceBlue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <DataGrid Name="dgZScanPoints" 
                                  AutoGenerateColumns="false"
                                  IsReadOnly="True" RowHeaderWidth="0" SelectedCellsChanged="dgZScanPoints_SelectedCellsChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding ZPos}" Header="Z Pos" Width="50"/>
                                <DataGridTextColumn Binding="{Binding ScanState}" Header="Scan State" Width="5*"/>
                                <DataGridTextColumn Binding="{Binding pfState}" Header="Result" Width="5*"/>
                            </DataGrid.Columns>

                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseUp" Handler="dataGridScanLevel_MouseUp"/>
                                </Style>
                            </DataGrid.ItemContainerStyle>
                        </DataGrid>

                        <Image Name="imageCaptured" Grid.Column="1" Width="auto" Height="auto" SizeChanged="imageResized" />

                        <classes:HeatMap x:Name="mHeatMap" Grid.Column="1" 
                                         ShowGridLines="true" MouseDown="click_heatMapMouseDown" 
                                         MouseUp="click_heatMapMouseUp" 
                                         Width="{Binding ElementName=imageCaptured, Path=ActualWidth}" 
                                         Height="{Binding ElementName=imageCaptured, Path=ActualHeight}"/>

                        <Canvas Name="canvasDrawing"
                            Grid.Column="1"
                            MouseDown="Grid_MouseDown"
                            MouseUp="Grid_MouseUp"
                            MouseMove="Grid_MouseMove"
                            Background="Transparent"
                            
                            Width="{Binding ElementName=imageCaptured, Path=ActualWidth}" Height="{Binding ElementName=imageCaptured, Path=ActualHeight}"/>

                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="5*" />
                            </Grid.RowDefinitions>

                            <Label Name="lblHeatMapUnits" Content="dBuV" Grid.Row="0" HorizontalAlignment="Center"/>
                            <Grid Name="IntensityColorKeyGrid"
                              Grid.Row="1"
                              Width="80"/>
                        </Grid>
                        
                        
                    </Grid>
                </TabItem>

                <TabItem Header="Analyze" Name="AnalyzeTab">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="5*"/>
                        </Grid.ColumnDefinitions>
                        <DataGrid Name="dgThresholds" Grid.Column="0" 
                                  AutoGenerateColumns="false"
                                  IsReadOnly="True" RowHeaderWidth="0"
                                  SelectedCellsChanged="analyzeGrid_SelectedCellsChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Name}" Header="Name" Width="5*"/>
                                <DataGridTextColumn Binding="{Binding State}" Header="State" Width="5*"/>
                            </DataGrid.Columns>

                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseUp" Handler="dataGridThreshold_MouseUp"/>
                                </Style>
                            </DataGrid.ItemContainerStyle>
                        </DataGrid>
                        
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="5*" />
                            </Grid.RowDefinitions>

                            <Label Name="lblAnalyzeGraphTitle" Content="dBuV vs Hz" HorizontalAlignment="Center"/>

                            <ni:Graph Name="graph1" Grid.Row="1" DefaultInteraction="Pan" >
                                <ni:Graph.Children>
                                    <ni:MultiPlotCursor />
                                </ni:Graph.Children>
                                <ni:Graph.Plots>
                                    <ni:Plot Label="Data" Name="PlotData">
                                        <ni:LinePlotRenderer Stroke="Blue" />

                                    </ni:Plot>
                                    <ni:Plot  Label="Threshold" Name="PlotThreshold">
                                        <ni:LinePlotRenderer Stroke="Red" />
                                    </ni:Plot>
                                </ni:Graph.Plots>
                            </ni:Graph>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>

        </Grid>









        <!-- DO NOT DELETE FOLLOWING LINE -->
        <!--<TextBox Height="23" TextWrapping="Wrap"  Text="{Binding Source={x:Static p:Settings.Default}, Path=Username, Mode=TwoWay}" Width="120" Margin="34,398,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>-->

        <!--<TextBox x:Name="messageText" Height="23" Width="120" Text="{Binding Path=Name2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="34,334,639.6,215"/>-->

    </Grid>
</Window>
